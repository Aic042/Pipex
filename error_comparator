██████╗ ██╗██████╗ ███████╗██╗  ██╗
██╔══██╗██║██╔══██╗██╔════╝╚██╗██╔╝
██████╔╝██║██████╔╝█████╗   ╚███╔╝ 
██╔═══╝ ██║██╔══   ██╔══╝   ██╔██╗ 
██║     ██║██║     ███████╗██╔╝ ██╗
╚═╝     ╚═╝╚═╝     ╚══════╝╚═╝  ╚═╝

make: Leaving directory '/home/aingunza/Rank2/Git_Pipex'
make: Entering directory '/home/aingunza/Rank2/Git_Pipex'
make: *** No rule to make target 'bonus'.  Stop.
make: Leaving directory '/home/aingunza/Rank2/Git_Pipex'

compiling           [OK]    
norminette          [KO]    


TESTNAME                                                                                  OUT     EXIT    TIME    LEAKS   

BASIC CHECKS
# 1: "infiles/basic.txt" "cat -e" "cat -e" "outfiles/outfile"                             [OK]    [OK]    [OK]    [OK]    
# 2: "infiles/basic.txt" "ls -la" "cat -e" "outfiles/outfile"                             [OK]    [OK]    [OK]    [OK]    
# 3: "infiles/basic.txt" "ls -l -a" "cat -e -n" "outfiles/outfile"                        [OK]    [OK]    [OK]    [OK]    
# 4: "infiles/basic.txt" "ls -l -a -f" "cat -e -n" "outfiles/outfile"                     [OK]    [OK]    [OK]    [OK]    
# 5: "infiles/basic.txt" "ls -laf" "cat -e -n" "outfiles/outfile"                         [OK]    [OK]    [OK]    [OK]    
# 6: "infiles/basic.txt" "grep -A5 is" "cat -e" "outfiles/nonexistingfile"                [OK]    [OK]    [OK]    [OK]    
# 7: "infiles/basic.txt" "cat -e" "grep nonexistingword" "outfiles/nonexistingfile"       [OK]    [KO]    [OK]    [OK]    
# 8: "infiles/empty.txt" "grep nonexistingword" "cat -e" "outfiles/outfile"               [OK]    [OK]    [OK]    [OK]    
# 9: "infiles/basic.txt" "sleep 3" "ls" "outfiles/outfile"                                [OK]    [OK]    [OK]    [OK]    
#10: "infiles/big_text.txt" "cat" "head -2" "outfiles/outfile"                            [OK]    [OK]    [OK]    [OK]    

ERROR CHECKING
#11: "nonexistingfile" "cat -e" "ls" "outfiles/outfile"                                   [KO]    [KO]    [OK]    [OK]    
#12: "nonexistingfile" "cat" "sleep 3" "outfiles/outfile"                                 [KO]    [KO]    [KO]    [OK]    
#13: "infiles/infile_without_permissions" "cat -e" "cat -e" "outfiles/outfile"            [KO]    [KO]    [OK]    [OK]    
#14: "infiles/basic.txt" "cat -e" "cat -e" "outfiles/outfile_without_permissions"         [OK]    [OK]    [OK]    [OK]    
#15: "infiles/basic.txt" "sleep 3" "cat -e" "outfiles/outfile_without_permissions"        [OK]    [OK]    [KO]    [OK]    
#16: "nonexistingfile" "cat -e" "cat -e" "outfiles/outfile_without_permissions"           [OK]    [OK]    [OK]    [OK]    
#17: "infiles/basic.txt" "nonexistingcommand" "cat -e" "outfiles/outfile"                 [OK]    [OK]    [OK]    [OK]    
#18: "infiles/basic.txt" "cat -e" "nonexistingcommand" "outfiles/outfile"                 [OK]    [KO]    [OK]    [OK]    
#19: "infiles/basic.txt" "cat -e" "cat -nonexistingflag" "outfiles/outfile"               [OK]    [KO]    [OK]    [OK]    
#20:                                                                                                              [OK]    
#21: ""                                                                                                           [OK]    
#22: "infiles/basic.txt" "cat -e" "outfiles/outfile"                                                              [OK]    
#23: "" "cat -e" "cat -e" "outfiles/outfile"                                                                      [OK]    
#24: "infiles/basic.txt" "" "cat -e" "outfiles/outfile"                                                           [OK]    
#25: "infiles/basic.txt" "cat -e" "" "outfiles/outfile"                                                           [OK]    

BONUS
#26: "infiles/basic.txt" "cat -e" "cat -e" "cat -e" "outfiles/outfile"                    [KO]    [KO]    [OK]    [OK]    
#27: "infiles/basic.txt" "cat -e" "cat -e" "cat -e" "cat -e" "cat -e" "cat -e" "cat -e"   [KO]    [KO]    [OK]    [OK]    
#28: "here_doc" "EOF" "cat -e" "cat -e" "outfiles/outfile"                                [KO]    [KO]    [OK]    [OK]    

ERRORS :(
------------------------------------------------------------------------------------------------------------------------
TEST 7:
./pipex "infiles/basic.txt" "cat -e" "grep nonexistingword" "outfiles/nonexistingfile" 
< infiles/basic.txt cat -e | grep nonexistingword > outfiles/nonexistingfile_tester

Exit status:
Your exit status: 0
Orig exit status: 1

------------------------------------------------------------------------------------------------------------------------
TEST 11:
./pipex "nonexistingfile" "cat -e" "ls" "outfiles/outfile" 
< nonexistingfile cat -e | ls > outfiles/outfile_tester

Output: 
outfiles/outfile:                                               outfiles/outfile_tester:
This is random text echoed into existing outfiles before      | infiles
applying pipex. This allows to verify whether your program    | last_err_log.txt
and the original replace or append existing text              | LICENSE
                                                              > outfiles
                                                              > pipex
                                                              > README.md
                                                              > run.sh
                                                              > test.sh
                                                              > utils.sh

Exit status:
Your exit status: 1
Orig exit status: 0

------------------------------------------------------------------------------------------------------------------------
TEST 12:
./pipex "nonexistingfile" "cat" "sleep 3" "outfiles/outfile" 
< nonexistingfile cat | sleep 3 > outfiles/outfile_tester

Output: 
outfiles/outfile:                                               outfiles/outfile_tester:
This is random text echoed into existing outfiles before      <
applying pipex. This allows to verify whether your program    <
and the original replace or append existing text              <

Exit status:
Your exit status: 1
Orig exit status: 0

Time:   
Your execution time: 0
Orig execution time: 3

------------------------------------------------------------------------------------------------------------------------
TEST 13:
./pipex "infiles/infile_without_permissions" "cat -e" "cat -e" "outfiles/outfile" 
< infiles/infile_without_permissions cat -e | cat -e > outfiles/outfile_tester

Output: 
outfiles/outfile:                                               outfiles/outfile_tester:
This is random text echoed into existing outfiles before      <
applying pipex. This allows to verify whether your program    <
and the original replace or append existing text              <

Exit status:
Your exit status: 1
Orig exit status: 0

------------------------------------------------------------------------------------------------------------------------
TEST 15:
./pipex "infiles/basic.txt" "sleep 3" "cat -e" "outfiles/outfile_without_permissions" 
< infiles/basic.txt sleep 3 | cat -e > outfiles/outfile_without_permissions_tester

Time:   
Your execution time: 0
Orig execution time: 3

------------------------------------------------------------------------------------------------------------------------
TEST 18:
./pipex "infiles/basic.txt" "cat -e" "nonexistingcommand" "outfiles/outfile" 
< infiles/basic.txt cat -e | nonexistingcommand > outfiles/outfile_tester

Exit status:
Your exit status: 0
Orig exit status: 127

------------------------------------------------------------------------------------------------------------------------
TEST 19:
./pipex "infiles/basic.txt" "cat -e" "cat -nonexistingflag" "outfiles/outfile" 
< infiles/basic.txt cat -e | cat -nonexistingflag > outfiles/outfile_tester

Exit status:
Your exit status: 0
Orig exit status: 1

------------------------------------------------------------------------------------------------------------------------
TEST 26:
./pipex "infiles/basic.txt" "cat -e" "cat -e" "cat -e" "outfiles/outfile" 
< infiles/basic.txt cat -e | cat -e | cat -e > outfiles/outfile_tester

Output: 
outfiles/outfile:                                               outfiles/outfile_tester:
This is random text echoed into existing outfiles before      |  Good draw knew bred ham busy his hour. Ask agreed answer rat
applying pipex. This allows to verify whether your program    | $$$
and the original replace or append existing text              | Did shy say mention enabled through elderly improve. As at so
                                                              > $$$
                                                              > Finished her are its honoured drawings nor. Pretty see mutual

Exit status:
Your exit status: 1
Orig exit status: 0

------------------------------------------------------------------------------------------------------------------------
TEST 27:
./pipex "infiles/basic.txt" "cat -e" "cat -e" "cat -e" "cat -e" "cat -e" "cat -e" "cat -e" "cat -e" "cat -e" "cat -e" "cat -e" "cat -e" "cat -e" "cat -e" "cat -e" "cat -e" "cat -e" "cat -e" "cat -e" "cat -e" "cat -e" "cat -e" "cat -e" "cat -e" "cat -e" "cat -e" "cat -e" "cat -e" "cat -e" "cat -e" "cat -e" "cat -e" "cat -e" "cat -e" "cat -e" "cat -e" "cat -e" "cat -e" "cat -e" "cat -e" "cat -e" "cat -e" "cat -e" "cat -e" "cat -e" "cat -e" "cat -e" "cat -e" "cat -e" "cat -e" "cat -e" "cat -e" "cat -e" "cat -e" "cat -e" "cat -e" "cat -e" "cat -e" "cat -e" "cat -e" "cat -e" "cat -e" "cat -e" "cat -e" "cat -e" "cat -e" "cat -e" "cat -e" "cat -e" "cat -e" "cat -e" "cat -e" "cat -e" "cat -e" "cat -e" "cat -e" "cat -e" "cat -e" "cat -e" "cat -e" "cat -e" "cat -e" "cat -e" "cat -e" "cat -e" "cat -e" "cat -e" "cat -e" "cat -e" "cat -e" "cat -e" "cat -e" "cat -e" "cat -e" "cat -e" "cat -e" "cat -e" "cat -e" "cat -e" "cat -e" "outfiles/outfile" 
< infiles/basic.txt cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e > outfiles/outfile_tester

Output: 
outfiles/outfile:                                               outfiles/outfile_tester:
This is random text echoed into existing outfiles before      |  Good draw knew bred ham busy his hour. Ask agreed answer rat
applying pipex. This allows to verify whether your program    | $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
and the original replace or append existing text              | Did shy say mention enabled through elderly improve. As at so
                                                              > $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
                                                              > Finished her are its honoured drawings nor. Pretty see mutual

Exit status:
Your exit status: 1
Orig exit status: 0

------------------------------------------------------------------------------------------------------------------------
TEST 28:
./pipex "here_doc" "EOF" "cat -e" "cat -e" "outfiles/outfile" 
cat -e << EOF | cat -e >> outfiles/outfile_tester

Output: 
outfiles/outfile:                                               outfiles/outfile_tester:
This is random text echoed into existing outfiles before        This is random text echoed into existing outfiles before 
applying pipex. This allows to verify whether your program      applying pipex. This allows to verify whether your program
and the original replace or append existing text                and the original replace or append existing text
                                                              > Hello$$
                                                              > Hello$$
                                                              > Hello$$

Exit status:
Your exit status: 1
Orig exit status: 0
